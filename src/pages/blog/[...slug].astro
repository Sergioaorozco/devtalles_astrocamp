---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { GET } from '../api/clients/index.ts';
import { render } from 'astro:content';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
}
type Props = CollectionEntry<'blog'>;

export const prerender = false;

const post = Astro.props;
const { Content } = await render(post);

type User = {
	name: string;
	// Add other fields if necessary
};

const getCurrentUsers = async(): Promise<User[]> => {
	try {
		const response = await GET(Astro);
		const data = response.json();
		return data
	} catch (err) {
		console.error(err);
		return [];
	}
}

---

<BlogPost {...post.data}>
	<div>
		{(await getCurrentUsers()).map((user: User) => (
		<ul>
			<li>{user.name}</li>
		</ul>
	))}
	</div>
	<Content />
</BlogPost>
